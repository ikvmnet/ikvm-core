<Project>
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <!-- 
    
        PublishProjectReference
        
        These references have their Publish target invoked, with the output being consumed by the containing project.
        
    -->

    <!-- Publish target that returns publish directory. -->
    <Target Name="GetPublishProjectPath" DependsOnTargets="Publish" Returns="$(GetPublishProjectPath)">
        <PropertyGroup>
            <GetPublishProjectPath>$([System.IO.Path]::GetFullPath('$(PublishDir)'))</GetPublishProjectPath>
        </PropertyGroup>
    </Target>

    <Target Name="AssignPublishProjectConfiguration" Condition=" '$(DesignTimeBuild)' != 'true' And '@(PublishProjectReference)' != '' ">
        <PropertyGroup>
            <OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration Condition="'$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)' == ''">true</OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildingSolutionFile)' == 'true')">true</ShouldUnsetParentConfigurationAndPlatform>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == ''">false</ShouldUnsetParentConfigurationAndPlatform>
        </PropertyGroup>
        <AssignProjectConfiguration ProjectReferences="@(PublishProjectReference)" CurrentProject="$(MSBuildProjectFullPath)" CurrentProjectConfiguration="$(Configuration)" CurrentProjectPlatform="$(Platform)" DefaultToVcxPlatformMapping="$(DefaultToVcxPlatformMapping)" VcxToDefaultPlatformMapping="$(VcxToDefaultPlatformMapping)" OutputType="$(OutputType)" ResolveConfigurationPlatformUsingMappings="false" SolutionConfigurationContents="$(CurrentSolutionConfigurationContents)" AddSyntheticProjectReferencesForSolutionDependencies="false" OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration="$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)" ShouldUnsetParentConfigurationAndPlatform="$(ShouldUnsetParentConfigurationAndPlatform)">
            <Output TaskParameter="AssignedProjects" ItemName="_PublishProjectReferenceWithConfiguration"/>
            <Output TaskParameter="UnassignedProjects" ItemName="_PublishProjectReferenceWithConfiguration"/>
        </AssignProjectConfiguration>
    </Target>

    <Target Name="GetPublishProjectReferences" DependsOnTargets="AssignPublishProjectConfiguration" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_PublishProjectReferenceWithConfiguration)' != '' ">
        <ItemGroup>
            <__PublishProjectReference Remove="@(__PublishProjectReference)" />
            <__PublishProjectReference Include="@(_PublishProjectReferenceWithConfiguration)">
                <PublishProjectIdentity>%(Identity)</PublishProjectIdentity>
                <PublishProjectName>$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)'))</PublishProjectName>
                <PublishTargetPath Condition=" '%(_PublishProjectReferenceWithConfiguration.PublishTargetPath)' != '' ">$([MSBuild]::EnsureTrailingSlash('%(_PublishProjectReferenceWithConfiguration.PublishTargetPath)'))</PublishTargetPath>
                <PublishPackagePath Condition=" '%(_PublishProjectReferenceWithConfiguration.PublishPackagePath)' != '' ">$([MSBuild]::EnsureTrailingSlash('%(_PublishProjectReferenceWithConfiguration.PublishPackagePath)'))</PublishPackagePath>
            </__PublishProjectReference>
        </ItemGroup>
        <AddIndexMetadata Items="@(__PublishProjectReference)" MetadataName="_Index">
            <Output TaskParameter="Items" ItemName="_PublishProjectReference" />
        </AddIndexMetadata>
    </Target>

    <!-- Transforms the contents of a file using a #PARAMETER# replacement strategy. -->
    <UsingTask TaskName="_ApplyPublishProjectReferenceMetadata" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
            <Project ParameterType="Microsoft.Build.Framework.ITaskItem" Required="true" />
            <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" Output="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="System.IO" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                foreach (var item in Items)
                    Project.CopyMetadataTo(item);
                ]]>
            </Code>
        </Task>
    </UsingTask>

    <PropertyGroup>
        <BuildPublishProjectReferencesDependsOn>
            $(BuildPublishProjectReferencesDependsOn);
            GetPublishProjectReferences;
        </BuildPublishProjectReferencesDependsOn>
    </PropertyGroup>

    <Target Name="BuildPublishProjectReferences"  DependsOnTargets="$(BuildPublishProjectReferencesDependsOn)" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_PublishProjectReference)' != '' ">
        <ItemGroup>
            <_PublishProjectReferencesToPublishTarget Remove="@(_PublishProjectReferencesToPublishTarget)" />
            <_PublishProjectReferencesToPublishTarget Include="@(_PublishProjectReference)">
                <Properties>%(_PublishProjectReference.SetConfiguration);%(_PublishProjectReference.SetPlatform);%(_PublishProjectReference.SetTargetFramework);%(_PublishProjectReference.SetRuntimeIdentifier)</Properties>
            </_PublishProjectReferencesToPublishTarget>
        </ItemGroup>
        <MSBuild Projects="@(_PublishProjectReferencesToPublishTarget)" Targets="Publish;GetPublishProjectPath" BuildInParallel="$(BuildInParallel)" RemoveProperties="$(_GlobalPropertiesToRemoveFromProjectReferences)" RebaseOutputs="true">
            <Output TaskParameter="TargetOutputs" ItemName="__ResolvedPublishProjectReferencePublishProjectPath" />
        </MSBuild>
        <ItemGroup>
            <_PublishProjectReferencesToPublishTarget Remove="@(_PublishProjectReferencesToPublishTarget)" />
            <_ResolvedPublishProjectReferencePublishProjectPath Include="@(__ResolvedPublishProjectReferencePublishProjectPath->'%(OriginalItemSpec)')">
                <PublishDir>%(Identity)</PublishDir>
            </_ResolvedPublishProjectReferencePublishProjectPath>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetPublishProjectReferenceItemsDependsOn>
            $(GetPublishProjectReferenceItemsDependsOn);
            BuildPublishProjectReferences;
        </GetPublishProjectReferenceItemsDependsOn>
    </PropertyGroup>

    <Target Name="GetPublishProjectReferenceItems" DependsOnTargets="$(GetPublishProjectReferenceItemsDependsOn)" Inputs="@(_ResolvedPublishProjectReferencePublishProjectPath)" Outputs="%(_ResolvedPublishProjectReferencePublishProjectPath.Identity)\%(_ResolvedPublishProjectReferencePublishProjectPath._Index)\null" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_ResolvedPublishProjectReferencePublishProjectPath)' != '' ">
        <PropertyGroup>
            <_ResolvedPublishProjectReferencePublishDir>%(_ResolvedPublishProjectReferencePublishProjectPath.PublishDir)</_ResolvedPublishProjectReferencePublishDir>
        </PropertyGroup>
        <ItemGroup>
            <__PublishProjectReferenceInputItems Remove="@(__PublishProjectReferenceInputItems)" />
            <__PublishProjectReferenceInputItems Include="$(_ResolvedPublishProjectReferencePublishDir)**\*" />
            <_PublishProjectReferenceInputItems Include="@(__PublishProjectReferenceInputItems)">
                <PublishItemPath>%(RecursiveDir)%(Filename)%(Extension)</PublishItemPath>
            </_PublishProjectReferenceInputItems>
            <__PublishProjectReferenceInputItems Remove="@(__PublishProjectReferenceInputItems)" />
        </ItemGroup>
        <_ApplyPublishProjectReferenceMetadata Project="@(_ResolvedPublishProjectReferencePublishProjectPath)" Items="@(_PublishProjectReferenceInputItems)">
            <Output TaskParameter="Items" ItemName="_PublishProjectReferenceInputItemsWithProjectMetadata" />
        </_ApplyPublishProjectReferenceMetadata>
        <ItemGroup>
            <_PublishProjectReferenceInputItems Remove="@(_PublishProjectReferenceInputItems)" />
            <_PublishProjectReferenceItems Include="@(_PublishProjectReferenceInputItemsWithProjectMetadata)">
                <PublishItemGroup Condition=" '%(_PublishProjectReferenceInputItemsWithProjectMetadata.PublishItemGroup)' == '' ">None</PublishItemGroup>
            </_PublishProjectReferenceItems>
            <_PublishProjectReferenceInputItemsWithProjectMetadata Remove="@(_PublishProjectReferenceInputItemsWithProjectMetadata)" />
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetPublishProjectReferenceOutputItemsDependsOn>
            $(GetPublishProjectReferenceOutputItems);
            BuildPublishProjectReferences;
            GetPublishProjectReferenceItems;
        </GetPublishProjectReferenceOutputItemsDependsOn>
    </PropertyGroup>

    <Target Name="GetPublishProjectReferenceOutputItems" DependsOnTargets="$(GetPublishProjectReferenceOutputItemsDependsOn)" BeforeTargets="_GetPackageFiles" Inputs="@(_PublishProjectReferenceItems)" Outputs="%(_PublishProjectReferenceItems.PublishIdentity)\%(_PublishProjectReferenceItems._Index)\%(_PublishProjectReferenceItems.PublishItemGroup)\null" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_PublishProjectReferenceItems)' != '' ">
        <ItemGroup>
            <_PublishProjectItems Include="@(_PublishProjectReferenceItems)">
                <TargetPath Condition=" '%(_PublishProjectReferenceItems.PublishTargetPath)' != '' ">%(_PublishProjectReferenceItems.PublishTargetPath)%(_PublishProjectReferenceItems.PublishItemPath)</TargetPath>
                <PackagePath Condition=" '%(_PublishProjectReferenceItems.PublishPackagePath)' != '' ">%(_PublishProjectReferenceItems.PublishPackagePath)%(_PublishProjectReferenceItems.PublishItemPath)</PackagePath>
            </_PublishProjectItems>
        </ItemGroup>
        <CreateItem Include="@(_PublishProjectItems)" AdditionalMetadata="%(_PublishProjectReferenceItems.PublishItemMetadata)">
            <Output TaskParameter="Include" ItemName="%(_PublishProjectReferenceItems.PublishItemGroup)" />
        </CreateItem>
        <ItemGroup>
            <_PublishProjectItems Remove="@(_PublishProjectItems)" />
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <CollectPublishProjectReferenceItemsDependsOn>
            $(CollectPublishProjectReferenceItemsDependsOn);
            AssignPublishProjectConfiguration;
            GetPublishProjectReferences;
            BuildPublishProjectReferences;
            GetPublishProjectReferenceItems;
            GetPublishProjectReferenceOutputItems;
        </CollectPublishProjectReferenceItemsDependsOn>
    </PropertyGroup>

    <Target Name="CollectPublishProjectReferenceItems" BeforeTargets="_GetPackageFiles" DependsOnTargets="$(CollectPublishProjectReferenceItemsDependsOn)" Condition=" '$(DesignTimeBuild)' != 'true' ">

    </Target>

    <PropertyGroup>
        <AssignTargetPathsDependsOn>
            $(AssignTargetPathsDependsOn);
            CollectPublishProjectReferenceItems;
        </AssignTargetPathsDependsOn>
    </PropertyGroup>

</Project>
