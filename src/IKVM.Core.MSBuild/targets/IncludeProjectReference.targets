<Project>
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <!--
    
        IncludeProjectReference
        
        These references have their build output included into the content output of the consuming project.
        
    -->

    <Target Name="AssignIncludeProjectConfiguration" Condition=" '$(DesignTimeBuild)' != 'true' And '@(IncludeProjectReference)' != '' ">
        <PropertyGroup>
            <OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration Condition="'$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)' == ''">true</OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildingSolutionFile)' == 'true')">true</ShouldUnsetParentConfigurationAndPlatform>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == ''">false</ShouldUnsetParentConfigurationAndPlatform>
        </PropertyGroup>
        <AssignProjectConfiguration ProjectReferences="@(IncludeProjectReference)" CurrentProject="$(MSBuildProjectFullPath)" CurrentProjectConfiguration="$(Configuration)" CurrentProjectPlatform="$(Platform)" DefaultToVcxPlatformMapping="$(DefaultToVcxPlatformMapping)" VcxToDefaultPlatformMapping="$(VcxToDefaultPlatformMapping)" OutputType="$(OutputType)" ResolveConfigurationPlatformUsingMappings="false" SolutionConfigurationContents="$(CurrentSolutionConfigurationContents)" AddSyntheticProjectReferencesForSolutionDependencies="false" OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration="$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)" ShouldUnsetParentConfigurationAndPlatform="$(ShouldUnsetParentConfigurationAndPlatform)">
            <Output TaskParameter="AssignedProjects" ItemName="_IncludeProjectReferenceWithConfiguration"/>
            <Output TaskParameter="UnassignedProjects" ItemName="_IncludeProjectReferenceWithConfiguration"/>
        </AssignProjectConfiguration>
    </Target>

    <Target Name="GetIncludeProjectReferences" DependsOnTargets="AssignIncludeProjectConfiguration" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_IncludeProjectReferenceWithConfiguration)' != '' ">
        <ItemGroup>
            <__IncludeProjectReference Remove="@(__IncludeProjectReference)" />
            <__IncludeProjectReference Include="@(_IncludeProjectReferenceWithConfiguration)">
                <IncludeProjectIdentity>%(Identity)</IncludeProjectIdentity>
                <IncludeProjectName>$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)'))</IncludeProjectName>
                <IncludeTargetPath Condition=" '%(_IncludeProjectReferenceWithConfiguration.IncludeTargetPath)' != '' ">$([MSBuild]::EnsureTrailingSlash('%(_IncludeProjectReferenceWithConfiguration.IncludeTargetPath)'))</IncludeTargetPath>
                <IncludePackagePath Condition=" '%(_IncludeProjectReferenceWithConfiguration.IncludePackagePath)' != '' ">$([MSBuild]::EnsureTrailingSlash('%(_IncludeProjectReferenceWithConfiguration.IncludePackagePath)'))</IncludePackagePath>
            </__IncludeProjectReference>
        </ItemGroup>
        <AddIndexMetadata Items="@(__IncludeProjectReference)" MetadataName="_Index">
            <Output TaskParameter="Items" ItemName="_IncludeProjectReference" />
        </AddIndexMetadata>
    </Target>

    <Target Name="GetIncludeProjectReferenceItems" DependsOnTargets="$(GetIncludeProjectReferenceItemsDependsOn)" Inputs="@(_IncludeProjectReference)" Outputs="@(_IncludeProjectReference->'%(Identity)\%(_Index)\null')" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_IncludeProjectReference)' != '' ">
        <ItemGroup>
            <_IncludeProjectReferencesToTarget Remove="@(_IncludeProjectReferencesToTarget)" />
            <_IncludeProjectReferencesToTarget Include="@(_IncludeProjectReference)">
                <Properties>%(_IncludeProjectReference.SetConfiguration);%(_IncludeProjectReference.SetPlatform);%(_IncludeProjectReference.SetTargetFramework)</Properties>
            </_IncludeProjectReferencesToTarget>
        </ItemGroup>
        <MSBuild Projects="@(_IncludeProjectReferencesToTarget)" Targets="Build" BuildInParallel="$(BuildInParallel)" RemoveProperties="$(_GlobalPropertiesToRemoveFromProjectReferences);RuntimeIdentifier;DesignTimeBuild" />
        <MSBuild Projects="@(_IncludeProjectReferencesToTarget)" Targets="BuiltProjectOutputGroup" BuildInParallel="$(BuildInParallel)" RemoveProperties="$(_GlobalPropertiesToRemoveFromProjectReferences);RuntimeIdentifier;DesignTimeBuild" RebaseOutputs="true">
            <Output TaskParameter="TargetOutputs" ItemName="_ResolvedIncludeProjectReferenceItems" />
        </MSBuild>
        <ItemGroup>
            <_IncludeProjectReferenceItems Include="@(_ResolvedIncludeProjectReferenceItems)">
                <IncludeItemGroup Condition=" '%(_ResolvedIncludeProjectReferenceItems.IncludeItemGroup)' == '' ">None</IncludeItemGroup>
                <IncludeItemPath>%(RecursiveDir)%(Filename)%(Extension)</IncludeItemPath>
            </_IncludeProjectReferenceItems>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetIncludeProjectReferenceItemsDependsOn>
            $(GetIncludeProjectReferenceItemsDependsOn);
            GetIncludeProjectReferences;
        </GetIncludeProjectReferenceItemsDependsOn>
    </PropertyGroup>

    <Target Name="GetIncludeProjectReferenceOutputItems" DependsOnTargets="$(GetIncludeProjectReferenceOutputItemsDependsOn)" BeforeTargets="_GetPackageFiles" Inputs="@(_IncludeProjectReferenceItems)" Outputs="%(_IncludeProjectReferenceItems.IncludeIdentity)\%(_IncludeProjectReferenceItems._Index)\%(_IncludeProjectReferenceItems.IncludeItemGroup)\null" Condition=" '$(DesignTimeBuild)' != 'true' And '@(_IncludeProjectReferenceItems)' != '' ">
        <ItemGroup>
            <_IncludeProjectItems Include="@(_IncludeProjectReferenceItems)">
                <TargetPath Condition=" '%(_IncludeProjectReferenceItems.IncludeTargetPath)' != '' ">$([MSBuild]::MakeRelative('.', '%(_IncludeProjectReferenceItems.IncludeTargetPath)%(_IncludeProjectReferenceItems.IncludeItemPath)'))</TargetPath>
                <PackagePath Condition=" '%(_IncludeProjectReferenceItems.IncludeTargetPath)' != '' ">$([MSBuild]::MakeRelative('.', '%(_IncludeProjectReferenceItems.IncludeTargetPath)%(_IncludeProjectReferenceItems.IncludeItemPath)'))</PackagePath>
            </_IncludeProjectItems>
        </ItemGroup>
        <CreateItem Include="@(_IncludeProjectItems)" AdditionalMetadata="%(_IncludeProjectReferenceItems.IncludeItemMetadata)">
            <Output TaskParameter="Include" ItemName="%(_IncludeProjectReferenceItems.IncludeItemGroup)" />
        </CreateItem>
    </Target>

    <PropertyGroup>
        <GetIncludeProjectReferenceOutputItemsDependsOn>
            $(GetIncludeProjectReferenceOutputItemsDependsOn);
            GetIncludeProjectReferenceItems;
        </GetIncludeProjectReferenceOutputItemsDependsOn>
    </PropertyGroup>

    <Target Name="CollectIncludeProjectReferenceItems" BeforeTargets="_GetPackageFiles" DependsOnTargets="$(CollectIncludeProjectReferenceItemsDependsOn)" Condition=" '$(DesignTimeBuild)' != 'true' ">

    </Target>

    <PropertyGroup>
        <CollectIncludeProjectReferenceItemsDependsOn>
            $(CollectIncludeProjectReferenceItemsDependsOn);
            AssignIncludeProjectConfiguration;
            GetIncludeProjectReferences;
            GetIncludeProjectReferenceItems;
            GetIncludeProjectReferenceOutputItems;
        </CollectIncludeProjectReferenceItemsDependsOn>
    </PropertyGroup>

    <PropertyGroup>
        <AssignTargetPathsDependsOn>
            $(AssignTargetPathsDependsOn);
            CollectIncludeProjectReferenceItems;
        </AssignTargetPathsDependsOn>
    </PropertyGroup>

</Project>
