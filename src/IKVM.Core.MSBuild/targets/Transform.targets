<Project>
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <!-- Transforms the contents of a file using a #PARAMETER# replacement strategy. -->
    <UsingTask TaskName="Transform" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
            <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
            <Parameters ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="System.IO" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                foreach (var file in Items)
                {
                    var i = file.ItemSpec;
                    var o = file.GetMetadata("TargetPath");
                    var c = File.ReadAllText(i);
                    foreach (var parameter in Parameters)
                    {
                        var n = parameter.ItemSpec;
                        var v = parameter.GetMetadata("Value");
                        c = c.Replace($"#{n}#", v);
                    }
                    
                    // check that there is actually a change
                    if (File.Exists(o) && File.ReadAllText(o) == c)
                        continue;
                    
                    Directory.CreateDirectory(Path.GetDirectoryName(o));
                    File.WriteAllText(o, c);
                }
                ]]>
            </Code>
        </Task>
    </UsingTask>

    <Target Name="WriteTransformValues" Condition=" '$(TargetFramework)' != '' ">
        <WriteLinesToFile File="$(IntermediateOutputPath)TransformValues.txt" WriteOnlyWhenDifferent="true" Overwrite="true" />
    </Target>

    <Target Name="Transform" DependsOnTargets="WriteTransformValues" Inputs="$(IntermediateOutputPath)TransformValues.txt;@(Transform)" Outputs="@(Transform->'%(TargetPath)')" Condition=" '$(TargetFramework)' != '' And '@(Transform)' != '' ">
        <Transform Items="@(Transform)" Parameters="@(TransformValues)" />
        <ItemGroup>
            <FileWrites Include="@(Transform->'%(TargetPath)')" />
        </ItemGroup>
    </Target>
    
    <PropertyGroup>
        <PrepareForBuildDependsOn>
            WriteTransformValues;
            Transform;
            $(PrepareForBuildDependsOn);
        </PrepareForBuildDependsOn>
    </PropertyGroup>
    
    <PropertyGroup>
        <BuildDependsOn>
            WriteTransformValues;
            Transform;
            $(BuildDependsOn);
        </BuildDependsOn>
    </PropertyGroup>

</Project>
